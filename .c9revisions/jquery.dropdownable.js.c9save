{"ts":1366221490166,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1367870424334,"patch":[[{"diffs":[[1,";(function( $ ){\r\n    \r\n\t$.fn.dropdownable = function( options ){\r\n\t\tvar $newEl = $('<div class=\"dropdownable-container\"><div class=\"dropdownable\"><div class=\"current-value\"></div><div class=\"arrow\"></div></div><div class=\"options\"></div></div>'),\r\n\t\t\t$newOpts = $('<ul>'),\r\n\t\t\t$opts = this.find('option'),\r\n\t\t\tcurrentOption = null;\r\n\r\n\t\tvar defaults = {\r\n\t\t\tshowFirst : true,\r\n\t\t\tonSelect : $.noop,\r\n\t\t\tslideDownSpeed : 300,\r\n\t\t\tonShowOptions : $.noop,\r\n\t\t\tonHideOptions : $.noop,\r\n\t\t\tonCreate : $.noop\r\n\t\t};\r\n\r\n\t\toptions = $.extend( defaults, options );\r\n\r\n\t\tif( options.showFirst ){\r\n\r\n\t\t\t$newEl.find( '.current-value' )\r\n\t\t\t\t.text( $opts.filter( ':first' ).text() );\r\n\t\t}\r\n\r\n\t\tvar tabIndex = options.tabindex || this.attr( 'tabindex' );\r\n\r\n\t\tif( typeof tabIndex !== 'undefined' ){\r\n\t\t\t$newEl.attr( 'tabindex', tabIndex );\r\n\t\t}\r\n\r\n\t\t$opts.each( function( i ){\r\n\r\n\t\t\tvar $newItem;\r\n\r\n\t\t\tif( options.showFirst && i === 0 ){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t$newItem = $( '<li data-value=\"' + this.value + '\">' + this.text + '</li>' );\r\n\r\n\t\t\t$newItem.on( 'click', function(){\r\n\r\n\t\t\t\t$newEl.find( '.current-value' ).text( $newItem.text() );\r\n\r\n\t\t\t\toptions.onSelect.call( $newItem );\r\n\r\n\t\t\t\thideOptions();\r\n\t\t\t});\r\n\r\n\t\t\toptions.onCreate.call( $newItem.get( 0 ) );\r\n\r\n\t\t\t$newOpts.append( $newItem );\r\n\t\t});\r\n\r\n\t\t/*********\r\n\t\t* events\r\n\t\t*********/\r\n\t\t$newEl.find( '.dropdownable' ).on( 'click', function(){\r\n\r\n\t\t\tshowOptions();\r\n\r\n\t\t} );\r\n\r\n\t\t$( document ).on( 'click' , function( e ){\r\n\r\n\t\t\tif( !$newEl.find( $( e.target ) ).length && $newEl.find( '.options' ).is( ':visible' ) ){\r\n\r\n\t\t\t\thideOptions();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$newEl.on( 'focus' , function(){\r\n\r\n\t\t\t$(this).find( '.dropdownable' )\r\n\t\t\t\t.addClass( 'focus' )\r\n\t\t\t\t.end()\r\n\t\t\t\t.find( '.options' )\r\n\t\t\t\t.find( 'ul' )\r\n\t\t\t\t.addClass( 'options-focus' );\r\n\t\t});\r\n\r\n\t\t$newEl.on( 'keydown', function( e ){\r\n\r\n\t\t\tvar opt;\r\n\r\n\t\t\t//keydown\r\n\t\t\tif( e.which && e.which === 40 ){\r\n\t\t\t\thandleKeyDown();\r\n\t\t\t}\r\n\t\t\t//keyup\r\n\t\t\telse if( e.which && e.which === 38 ){\r\n\t\t\t\thandleKeyUp();\r\n\t\t\t}\r\n\t\t\t//enter\r\n\t\t\telse if( e.which && e.which === 13 ){\r\n\r\n\t\t\t\tcurrentOption.trigger( 'click' );\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\t$newEl.on( 'blur' , function(){\r\n\t\t\tvar $this = $( this );\r\n\r\n\t\t\t$this.find( '.dropdownable' )\r\n\t\t\t\t.removeClass( 'focus' )\r\n\t\t\t\t.end()\r\n\t\t\t\t.find( '.options' )\r\n\t\t\t\t.find( 'ul' )\r\n\t\t\t\t.removeClass( 'options-focus' );\r\n\r\n\t\t\tif( $this.find( '.options' ).is( ':visible' ) ){\r\n\r\n\t\t\t\thideOptions();\r\n\t\t\t}\r\n\r\n\t\t\t//clean up\r\n\t\t\t$this.find('.options').find('li').removeClass( 'hover' );\r\n\t\t\tcurrentOptionIndex = 0;\r\n\r\n\t\t\t$( window ).off( 'keypress' );\r\n\t\t});\r\n\r\n\t\tif( 'ontouchstart' in window ){\r\n\r\n\t\t\t$newEl.find('.dropdownable').on( 'ontouchstart', function(){\r\n\t\t\t\tconsole.log ( 'touch' );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t/***************************\r\n\t\t* add elements to the DOM\r\n\t\t***************************/\r\n\r\n\t\t$newEl.find( '.options' ).append( $newOpts );\r\n\r\n\t\t/*********\r\n\t\t* resize\r\n\t\t*********/\r\n\t\t//create a clone to add to the DOM offscreen to get sizing\r\n\t\t$tempClone = $newEl.clone();\r\n\r\n\t\t$tempClone.css( { left : '-5000px', position : 'absolute' } )\r\n\t\t\t.attr( 'id', 'temp-clone-node' )\r\n\t\t\t.find('.options').css( { display : 'inline-block' } );\r\n\r\n\t\t$('body').append( $tempClone );\r\n\r\n\t\t$newEl.find('.dropdownable').css( { width : $tempClone.find( 'ul' ).width() - 8 } );\r\n\r\n\t\t$('#temp-clone-node').remove();\r\n\r\n\t\t//replace the original dropdown with our new, fabricated one\r\n\t\tthis.replaceWith( $newEl );\r\n\r\n\t\tfunction showOptions(){\r\n\r\n\t\t\t$newEl.find( '.options' )\r\n\t\t\t\t.slideDown( options.slideDownSpeed, options.onShowOptions )\r\n\t\t\t\t.end()\r\n\t\t\t\t.find( '.dropdownable')\r\n\t\t\t\t.addClass( 'dropdownable-open' );\r\n\t\t}\r\n\r\n\t\tfunction hideOptions(){\r\n\t\t\t$newEl.find( '.options' ).slideUp( options.slideDownSpeed, function(){\r\n\r\n\t\t\t\t$( this ).parent()\r\n\t\t\t\t\t.find( '.dropdownable' )\r\n\t\t\t\t\t.removeClass( 'dropdownable-open' );\r\n\r\n\t\t\t\toptions.onHideOptions.call( this );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tfunction handleKeyDown(){\r\n\t\t\t//first key down press\r\n\t\t\tif( !currentOption ){\r\n\t\t\t\tcurrentOption = $newOpts.children( ':first' );\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif( !currentOption.is( $newOpts.children( ':last' ) ) ){\r\n\t\t\t\t\tcurrentOption = currentOption.next();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif( ! $( '.dropdownable' ).find( '.options' ).is( ':visible' ) ){\r\n\t\t\t\tshowOptions();\r\n\t\t\t}\r\n\r\n\t\t\tcurrentOption.prev().removeClass( 'hover' );\r\n\r\n\t\t\tcurrentOption.addClass( 'hover' );\r\n\t\t}\r\n\r\n\t\tfunction handleKeyUp(){\r\n\r\n\t\t\tif( !currentOption.is( $newOpts.children( ':first' ) ) ){\r\n\t\t\t\tcurrentOption = currentOption.prev();\r\n\t\t\t}\r\n\r\n\t\t\tcurrentOption.next().removeClass( 'hover' );\r\n\r\n\t\t\tcurrentOption.addClass( 'hover' );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t};\r\n\r\n}( window.jQuery ));"]],"start1":0,"start2":0,"length1":0,"length2":4670}]],"length":4670,"saved":false}
